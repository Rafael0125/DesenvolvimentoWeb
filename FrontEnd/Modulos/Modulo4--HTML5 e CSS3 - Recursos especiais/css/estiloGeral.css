

/*          MÓDULO 04 -- HTML5 e CSS3 - Recursos especiais

    Estou colocando Id's no 'Body' de cada aula para que assim não seja preciso comentar todos os codigos, e quando eu quiser acessar de novo os link e arquivos feitos eles funcionarem corretamente com as suas respectivas configurações;

    As explicações ficaram em comentarios acima dos codigos de suas respectivas aulas

*/

/***************************************  Aula 01 -- Normalize CSS*******************************\
    Serve para padronizar configurações em browser diferentes;
    O nomalize pode ser copiado online pesquisando "nomalize css" no Google e entrando no primeiro link
    
*/    
/**************************************** Aula 01 -- FIM ****************************************/

/***************************************  Aula 02 -- Box Sizing & Cantos Arredondados
    
        Border-radius {
            Define um arredondamento da caixa;
            Podmeos usar para fazer o efeito de uma foto de perfil, que a foto fica redonda, como no intagram ou facebook;

            O ideal para fazer o arredondamento de uma imagem é que ela tenha a mesma medida de altura e largura;

            As medidas oodem ser declaradas da mesma maneira que uma margin ou padding,Exemplo:
                        'border-radius: 10px 50px 80px 100px;' ou
                        'border-radius: 20px 90px;';

            Em algumas versões mais antigas de browser temos que usar 'prefixos' para que o navegador possa interpretar corretamente o border-radius;

            Exemplos de prefixos:
                            -webkit-border-radius: 20px 90px; **Prefixo para versões do Google Chome e Safari**
                            -moz-border-radius: 20px 90px; **Prefixo para versões do Mozila Firefox**

            Link para a definição do border-radius:
                'https://www.w3schools.com/cssref/css3_pr_border-radius.asp'
        }

        box-sizing: border-box;{
            Usando o "box-sizing" com o valor "border-box;" ele mantem o tamanho da caixa definido, então quando adcionarmos um "padding" o tamanho da caixa não será alterado por exemplo;

            O "box-sizing" também é uma propriedade relativamente nova, então algumas vaezes sera necessario usar os prefixos:
                    -webkit-box-sizing: border-box;**Prefixo para versões do Google Chome e Safari**
                    -moz-box-sizing: border-box;**Prefixo para versões do Mozila Firefox**

        }



*/

#aula02 #caixa{ /* Exemplo de caixa sem 'box-sizing' */
    width: 300px;
    height: 300px;
    background: #b9c941;
    padding: 50px;
    margin: 15px;
    border-radius: 380px;  
    border-radius: 10px 50px 80px 100px; 
    border-radius: 20px 90px;
}

#aula02 #caixa2{ /* Exemplo de caixa com 'box-sizing' */
    width: 300px;
    height: 300px;
    background: #b9c941;
    padding: 50px;
    margin: 25px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    border-radius: 380px;  
    border-radius: 10px 50px 80px 100px; 
    border-radius: 20px 90px;
}

/**************************************** Aula 02 -- FIM ****************************************/

/***************************************  Aula 03 -- Degradês e Transparencia

    Transparencia{

        Usando o "background" com o valor 'rgba' podemos definir uma cor usando o r(red), g(green) e o b(blue) e usando a ultima propriedade o 'a' definimos a opacidade a cor, exemplo:
            background: rgba(255, 255, 255,0.5);

        Sendo o valor '0' de opacidade definindo que não aparecera nenhuma cor;

        E o valor '1' de opacidade definindo que a cor aparecera normalmente;
        Então entre 0 e 1 é onde formatamos a opacidade da cor.
    }
    background: linear-gradient(red, yellow, green, blue);{
        Usado para fazer um degradê de cores em um elemento definindo as cores red,yellow,green e blue;
        
        Podemos tambem definir a direção do efeito gradiênte usando:
                    "to left", "to right", "to top", "to bottom";

                background: linear-gradient(to top, red, yellow, green, blue);
                As definições sempre partiram do primeiro valor que foi inserido, que no exemplo a cima é o vermelho que saira de baixo e acaba com o azul na parte de cima;

        Podemos tambem definir em graus a rotação:
                background: linear-gradient(40deg, red, yellow, green, blue);

        Usamos o "background: radial-gradient(red,green);" para fazer um degrade em circulos com o primeiro valor sendo o mais central.

    }

*/

#aula03 #caixa{

    width: 300px;
    height: 300px;
    background: radial-gradient(black, black, red, red,black,black,black);
    /*background: linear-gradient(to top, red, yellow, green, blue);
    background: url(../Aula03_degrades_transparencias/imagens/camera.png);
    opacity: 0.5;  para deixar a imagem opaca*/

}

#aula03 #caixa2{

    width: 300px;
    height: 300px;
    background: linear-gradient(to top, red, yellow, green, blue);
    
}

/**************************************** Aula 03 -- FIM ****************************************/

/***************************************  Aula 04 -- Sombras
    Sombras{
                text-shadow: 20px 20px black ;
                    Podemos movimentar que nem um padding, por exemplo;
                    Usado para aplicar uma sombra em um texto;
                    O primeiro parametro movimenta a sombra na horizontal;

                    O segundo parametro movimenta a na vertical;

                    O terceiro parametro aplicar um "BLUR", que é um borrado na sombra;

                    O ultimo parametro é a cor da sombra, podendo ser definido com o nome das cores, um código exadecimal, um RGB e um RGBA, sendo possivel aplicar a opacidade na sombra.

                    Ela se comporta como um background então não afeta os elementos de texto;

                    Podemos tambem aplicar uma sombra direto em uma div usando o "box-shadow: 20px 20px 6px black;"

                    Seguindo os mesmo parametros explicados a cima;

                    No box-shadow temos um quarto parametro chamado "SPREAD" que é o espalhamento da sombra para aplicar um tamanho na sombra, exemplo:
                            box-shadow: 20px 20px 2px 20px black;
    }

*/
#aula04 #caixa{
    width: 300px;
    height: 300px;
    padding: 8px;
    margin: 20px;
    background: #009670;
    box-shadow: 40px 200px 2px 10px  black;
}

#aula04 #caixa h1{
    color: white;
    text-shadow: 20px 20px 2px rgba(255, 0, 0, 0.6) ;


}

/**************************************** Aula 04 -- FIM ****************************************/

/***************************************  Aula 05 -- Animações{
    Animações em CSS são possibilidades de a partir de determinadas formatações ir para outra formatação;

    Para usar animações temos que fazer algumas formatações:
        @keyframes animacao-caixa == Para identificar que estamos criando uma animação e colocamos o nome para a animação assim como colocamos o nome para formatar uma propriedade CSS;

        Então criamos a animação separada e usamos dentro do nosso identificador da caixa como uma propriedade CSS

        @keyframes animacao-caixa{
            from{} 'Estilo Inicial'
            to{} 'Estilo Final'
        }

        Então aplicamos a animação como uma propriedade usando o 
            animation-name: animacao-caixa;

        E aplicamos o tempo de duração da animação usando o 
                animation-duration: 5s;

        Podemos aplicar outras propriedades nas animações como por exemplo
            border-radius:30px;

        Usando o "animation-delay: 3s;" direto no elemento CSS podemos aplicar um delay de tempo na animação;

        Podemos fazer a animação ser execultada mais de uma vez com o
            "animation-iteration-count: 5;"  Sendo o valor o numero de vezes que ela repetirá;

        Podemos tambem alterar a direção da animação com o 
            animation-direction: alternate;

        Assim como o background podemos alinhar todas essas formatações dentro de uma unica propriedade:
            "animation: (NOME-DA-ANIMAÇÃO) (DURAÇÃO DA ANIMAÇÃO) (DELAY DA ANIMAÇÃO) (QUANTIDADE DE EXECUÇÕES DA ANIMAÇÃO) (A DIREÇÃO DA ANIMAÇÃO) ;"
                animation: animacao-caixa 5s 3s 5 alternate;

        Podemos movimentar a div usando a animação, declarando a posição da div como relativa e aplicando a movimetação na formatação da animação


        Podemos tambem colocar para mudar durante a animação


    }
*/


/* Para a animação funcionar direito nos browsers é preciso usar prefixos

@-webkit-keyframes animacao-caixa{
    from{
        background: red;

    } 
    to{
        background: green;
    }

}
@-moz-keyframes animacao-caixa{
    from{
        background: red;

    } 
    to{
        background: green;
    }

}
@-o-keyframes animacao-caixa{
    from{
        background: red;

    } 
    to{
        background: green;
    }

}*/
@keyframes animacao-caixa{
    from{
        background: red;
        border-radius: 0px;
        box-shadow: 40px 200px 0px 10px  green; 
        top: 0;
        left: 0;
    } 
    to{
        background: green;
        border-radius: 300px;
        box-shadow: 40px 200px 20px 10px  red;
        top: 200px;
        left: 200px;
    }

}

#aula05 #caixa{
    margin: 20px;
    width: 300px;
    height: 300px;
    background: red;
    position: relative;
    /*animation-name: animacao-caixa;
    animation-duration: 1s;
    animation-delay: 0s; 
    animation-iteration-count: 5;
    animation-direction: alternate;*/
    animation: animacao-caixa 5s 0s 5 alternate;
}
#aula05 #caixa2{
    margin: 20px;
    width: 300px;
    height: 300px;
    background: red;
    position: relative;
    /*animation-name: animacao-caixa;
    animation-duration: 1s;
    animation-delay: 0s; 
    animation-iteration-count: 5;
    animation-direction: alternate;*/
    animation: animacao-caixa 5s 0s 5 alternate;
}



/**************************************** Aula 05 -- FIM ****************************************/

/***************************************  Aula 06 -- Transições
    Para fazer transições usamos a propriedade "transition:;" dentro do HOVER do elemento que queremos mudar colocando o valor que queremos mudar e o tempo, por exemplo:
        transition: width 3s ;

    Podemos tambem declarar mais de uma mudança no transition com por exemplo:
        transition: width 3s, background 3s ;

    É possivel tambem inserir as mudanças que queremos no hover e usar apenas uma unica formatação de transition por exemplo:
        #aula06 #caixa:hover{
            width: 400px;
            background: red;
            transition: all 3s;
        }

    Assim faremos todas as formatações do hover em 3 segundos.

    Para fazer o efeito de transição o recomendado é usar os prefixos:
        -webkit-transition: ;
        -moz-transition: ;
        -o-transition: ;

*/

#aula06 #caixa{
    width: 300px;
    height: 300px;
    background: orange;
}

#aula06 #caixa:hover{
    width: 400px;
    background: red;
    /*transition: width 3s, background 3s ;*/
    transition: all 3s;

}

/**************************************** Aula 06 -- FIM ****************************************/







